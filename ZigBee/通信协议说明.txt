 /********************************
zigbee.h
接受上位机的数据
接收说明（以USART2为例）
	在程序开始的时候（begin中)使用zigbee_Init(&huart2)进行初始化;
	在回调函数中使用zigbeeMessageRecord(void)记录数据，之后即可调用接口得到正确数据

数据说明
    struct BasicInfo Game;储存比赛状态、时间、泄洪口信息
    struct CarInfo CarInfo;//储存车辆信息
    struct PassengerInfo Passenger;//储存人员的信息、位置和送达位置
    struct PackageInfo Package[6];//储存物资的信息
    struct StopInfo Stop[2];//储存隔离点位置信息
    struct ObstacleInfo Obstacle[8];//储存虚拟障碍物信息
    通过接口获取数据
    struct Position
{
    unsigned int X;
    unsigned int Y;
};
**********************************/
/**************接口*************************/
void zigbee_Init(UART_HandleTypeDef *huart);                                          //初始化
void zigbeeMessageRecord(void);				//实时记录信息，在每次接收完成后更新数据，重新开启中断

enum GameStateEnum getGameState(void);			//比赛状态 0为未开始，1为正常进行中，2为暂停中，3为比赛结束
uint16_t getGameTime(void);	                                                                //比赛时间，单位为0.1s
uint16_t getPassengerstartposX(void);			                //人员初始位置
uint16_t getPassengerstartposY(void);
struct Position getPassengerstartpos(void);
uint16_t getPassengerfinalposX(void);                                                       //人员需到达位置
uint16_t getPassengerfinalposY(void);
struct Position getPassengerfinalpos(void);
uint16_t getGameFlood(void);                                                                  //隔离点开启数量信息
uint16_t getFloodposX(int FloodNo);			               //隔离点位置X
uint16_t getFloodposY(int FloodNo);                                                       //隔离点位置Y
struct Position getFloodpos(int FloodNo);                                               //隔离点位置
uint16_t getCarposX();		                                              //小车x坐标
uint16_t getCarposY();			                              //小车y坐标
struct Position getCarpos();	                                                              //小车位置
uint16_t getPackageposX(int PackNo);		                              //物资x坐标
uint16_t getPackageposY(int PackNo);			               //物资y坐标
uint16_t getPackagewhetherpicked(int PackNo);                                    //物资是否已被收集   0未被收集，1已经收集
struct Position getPackagepos(int PackNo);	                             //物资位置
uint16_t getCarpicknum();                                                                      //小车收集物资数
uint16_t getCartransportnum();                                                             //小车运送人员数 
uint16_t getCartransport();                                                                     //小车上是否有人员 0为没有，1为有 
uint16_t getCarscore();                                                                          //小车得分
uint16_t getCartask();                                                                            //小车任务 0为上一阶段 1为下一阶段
uint16_t getCararea();                                                                            //小车区域 0为小车在迷宫外，1为小车在迷宫内
uint16_t getObstacleAposX(int ObstacleNo);		            //虚拟障碍Ax坐标
uint16_t getObstacleAposY(int ObstacleNo);			//虚拟障碍Ay坐标
uint16_t getObstacleBposX(int ObstacleNo);                                         //虚拟障碍Bx坐标
uint16_t getObstacleBposY(int ObstacleNo);                                        //虚拟障碍By坐标
struct Position getObstacleApos(int ObstacleNo);	                           //虚拟障碍A位置
struct Position getObstacleBpos(int ObstacleNo);	                          //虚拟障碍B位置